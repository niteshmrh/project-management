[{"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/index.js":"1","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/reportWebVitals.js":"2","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/App.js":"3","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/Header.jsx":"4","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/ProjectDetails.jsx":"5","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/ClientDetails.jsx":"6","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/Home.jsx":"7","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/AddClientModel.jsx":"8","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/Loader.jsx":"9","/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/AddProjectModel.jsx":"10"},{"size":663,"mtime":1676024654000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1675924332000,"results":"13","hashOfConfig":"12"},{"size":605,"mtime":1681446452418,"results":"14","hashOfConfig":"12"},{"size":1767,"mtime":1676455096000,"results":"15","hashOfConfig":"12"},{"size":10693,"mtime":1682079969140,"results":"16","hashOfConfig":"12"},{"size":807,"mtime":1682079922000,"results":"17","hashOfConfig":"12"},{"size":6447,"mtime":1682078904856,"results":"18","hashOfConfig":"12"},{"size":3418,"mtime":1681446436727,"results":"19","hashOfConfig":"12"},{"size":176,"mtime":1676454662000,"results":"20","hashOfConfig":"12"},{"size":4368,"mtime":1681216939450,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"miipae",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/index.js",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/reportWebVitals.js",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/App.js",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/Header.jsx",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/ProjectDetails.jsx",["54"],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/ClientDetails.jsx",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/pages/Home.jsx",["55"],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/AddClientModel.jsx",[],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/Loader.jsx",["56"],[],"/home/niteshkumar/Desktop/React Project/project-management/project-management-front/src/components/AddProjectModel.jsx",["57"],[],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction AddProjectModel(props) {\n  const [formData, setFormData] = useState({});\n  const [isFormSubmit, setIsFormSubmit] = useState(false);\n  const [clients, setClients] = useState([]);\n  // client Fetching\n\n  useEffect(() => {\n    fetchClintApi();\n  }, []);\n\n  const fetchClintApi = async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:4000/api/v1/allClients\",\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 201) {\n        setClients(response.data.data);\n        console.log(response);\n      } else {\n        alert(\"Something went wrong!!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formData);\n    try {\n      setIsFormSubmit(true);\n      const response = await axios.post(\n        \"http://localhost:4000/api/v1/createproject\",\n        {\n          Name: formData.name,\n          Description: formData.description,\n          Status: formData.status,\n          Client: formData.client,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(response);\n      if (response.status === 201) {\n        setIsFormSubmit(false);\n        window.location = \"/\";\n      } else {\n        alert(\"Something went wrong!!!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"modal fade\" id=\"addProject\" tabIndex={-1}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h1 className=\"modal-title fs-5\" id=\"exampleModelLabel\">\n              Add New Project\n            </h1>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n            />\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <div className=\"mb-2\">\n                <label className=\"form-label\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  onChange={(e) => handleChange(e)}\n                />\n              </div>\n\n              <div className=\"mb-2\">\n                <label className=\"form-label\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  name=\"description\"\n                  onChange={(e) => handleChange(e)}\n                ></textarea>\n              </div>\n\n              <div className=\"mb-2\">\n                <label className=\"form-label\">Status</label>\n                <select\n                  className=\"form-control\"\n                  name=\"status\"\n                  onChange={(e) => handleChange(e)}\n                >\n                  <option>Select Status</option>\n                  <option>Not Started</option>\n                  <option>Pending</option>\n                  <option>Started</option>\n                  <option>Completed</option>\n                </select>\n              </div>\n\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Client</label>\n                <select\n                  className=\"form-control\"\n                  name=\"client\"\n                  onChange={(e) => handleChange(e)}\n                >\n                  <option>Select Client</option>\n                  {clients.length > 0 &&\n                    clients?.map((client) => (\n                      <option value={client.id} key={client.id}>\n                        {client?.Name}\n                      </option>\n                    ))}\n                  {/* <option>Abc</option>\n                  <option>def</option> */}\n                </select>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddProjectModel;\n",[],{"ruleId":"58","severity":1,"message":"59","line":64,"column":6,"nodeType":"60","endLine":64,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":16,"column":8,"nodeType":"64","messageId":"65","endLine":16,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":6,"column":7,"nodeType":"68","endLine":6,"endColumn":41},{"ruleId":"62","severity":1,"message":"69","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProjectApi'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isFormSubmit' is assigned a value but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [fetchProjectApi]",{"range":"73","text":"74"},[2032,2034],"[fetchProjectApi]"]